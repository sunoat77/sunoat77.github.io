<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>程序猫</title>
  
  <subtitle>欢迎来到程序猫的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sunoat77.github.io/"/>
  <updated>2019-05-02T03:16:15.418Z</updated>
  <id>http://sunoat77.github.io/</id>
  
  <author>
    <name>codeCat</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jsp-九大隐式对象</title>
    <link href="http://sunoat77.github.io/2019/05/02/jsp-%E4%B9%9D%E5%A4%A7%E9%9A%90%E5%BC%8F%E5%AF%B9%E8%B1%A1/"/>
    <id>http://sunoat77.github.io/2019/05/02/jsp-九大隐式对象/</id>
    <published>2019-05-02T02:24:08.000Z</published>
    <updated>2019-05-02T03:16:15.418Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jsp隐式对象的解读:</span><br></pre></td></tr></table></figure><a id="more"></a><p>九大隐式对象：<br>输入输出对象：out、request、response<br>作用域通信对象：session、application、pageContext<br>servlet对象：page、config<br>错误对象：exception<br>JSP 定义的作用域包括 page、request、session 和 application</p><hr><h3 id="在说隐式对象之前先说一下请求重定向和请求转发的区别"><a href="#在说隐式对象之前先说一下请求重定向和请求转发的区别" class="headerlink" title="在说隐式对象之前先说一下请求重定向和请求转发的区别"></a>在说隐式对象之前先说一下请求重定向和请求转发的区别</h3><p>先说定义：一个web资源收到客户端请求后，通知服务器去调用另外一个web资源进行处理(服务器内部的调用)，称之为请求转发<br>    一个web资源收到客户端请求后，通知浏览器去访问另外一个web资源（浏览器进行2次请求），称之为请求重定向<br>    区别：<br>    1.forward是服务器内部转发，而redirect是通过客户端进行转发<br>    2.如果用forward进行转发的话，客户端的url地址不会改变，但是如果用redirect的话，则url地址会改变<br>    3.如果用forward进行转发，转发页面和被转发页面处于一个request请求内，而redirect不是。</p><h3 id="输入输出对象："><a href="#输入输出对象：" class="headerlink" title="输入输出对象："></a>输入输出对象：</h3><p><strong>（1）request</strong>：<br>1.接受数据：request.getParameter();获取的是form表单提交的数据(一个参数名对应一个参数值)<br>String[ ] getParameterValues (String name);(一个参数名对应多个参数值)<br>2.设置页面请求数据编码（只适用于编码）<br>    &lt;%<br>     request.setCharacterEncoding(“UTF-8”); //放在getParameter前才有效<br>    %&gt;<br>    比如：用户的注册啥的<br>    补充：get、post都适用的情况：<br>    &lt;%=new String(request.getParameter(“bookName”).getBytes(“ISO-8859-1”),”UTF-8”) %&gt;<br>3.设置属性、取得属性和删除属性<br>    setAttribute  getAttribute  removeAttribute<br>    程序员根据业务逻辑的需求，设置属性值<br>request.getParameter()和request.getAttribute()的不同点：<br>    request.getParameter()可以看做：form表单提交的数据是写入到服务器的，<br>    request.getParameter()是从服务器中取值。<br>    request.getAttribute()：写入到同一个request对象中的。<br><strong>4.请求转发</strong><br>request对象提供了一个getRequestDispatcher方法，该方法返回一个RequestDispatcher对象，调用这个对象的forward方法可以实现请求转发，从而共享请求中的数据<br>这里的URL可以为相对路径,如果URL开始为“/”,则认为它是相对于当前WEB应用程序的根目录。<br>    &lt;%<br>     RequestDispatcher requestDispatcher= request.getRequestDispatcher (“URL”);<br>     requestDispatcher.forward(request,response);<br>    %&gt;<br><strong>请求转发的特点</strong><br>在请求转发的过程中，地址栏不发生变化，两个页面之间使用的是同一个request对象！<br><strong>5.获得session</strong><br>    &lt;%<br>      HttpSession mySession = request.getSession();<br>    %&gt;<br>    <strong>注意：</strong><br>补充1：设置页面请求数据编码（只适用post） ：<br>    &lt;%<br>     request.setCharacterEncoding(“UTF-8”); //放在getParameter前才有效<br>    %&gt;<br><strong>（2）response对象</strong><br>常用方法<br>1.void sendRedirect (String name)<br>          发送一个响应给浏览器，指示其请求另一个URL<br>    //设置属性<br>    session.setAttribute(“userName”, userName);<br>    //请求重定向  /响应转发 :地址栏发生了变化，两个页面之间使用的不是同一个request对象<br>    response.sendRedirect(“success.jsp”);//使用的是相对路径的情况</p><p>2.void setHeader(String name,String value)<br>        设置响应头信息<br>    out.print(“2秒后，刷新到成功界面！”);<br>    response.setHeader(“refresh”, “2;url=success.jsp”);</p><p>3.void setContentType (String name)<br>        设置作为响应生成的内容的类型和字符编码<br><strong>(3)out 对象</strong></p><pre><code>作用域通信对象</code></pre><p><strong>(4)session会话技术：服务器端</strong><br>    cookie技术：客户端<br><strong>(5)application</strong>：统计用户浏览网页的次数<br><strong>(6)pageContext</strong>：可以访问任何的隐式对象</p><p>servlert对象：<br><strong>(7)page</strong>：使用 page 对象可以访问 Servlet 类的所有变量和方法</p><p><strong>(8)config</strong>：存储在编译 JSP 页面的过程中创建的 Servlet 的信息<br>提供了检索 Servlet 初始化参数的方法</p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jsp隐式对象的解读:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于数据库的链接-jdbc</title>
    <link href="http://sunoat77.github.io/2019/05/02/%E5%85%B3%E4%BA%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E9%93%BE%E6%8E%A5-jdbc/"/>
    <id>http://sunoat77.github.io/2019/05/02/关于数据库的链接-jdbc/</id>
    <published>2019-05-02T01:18:22.000Z</published>
    <updated>2019-05-02T02:12:46.732Z</updated>
    
    <content type="html"><![CDATA[<p>在java中，数据库存取技术可分为如下几类：<br><a id="more"></a></p><ul><li>JDBC直接访问数据库</li><li>第三方O/R工具，如Mybatis等<br>JDBC是java访问数据库的基石。<h1 id="1、什么是JDBC"><a href="#1、什么是JDBC" class="headerlink" title="1、什么是JDBC"></a>1、什么是JDBC</h1>JDBC是一个独立于特定数据库管理系统/通用的Sql数据库存取和操作的公共接口，定义了用来访问数据库的标准java类库，使用这个类可以以一种标准的方法、方便的访问数据库资源。<br>接下来，我们以mysql为例：<br>通过java连接mysql数据库的步骤<br>1.将mysql的驱动包导入到项目中<br><img src="https://s2.ax1x.com/2019/05/02/EYONut.png" alt="关流"><br>2.创建一个Class文件，名为DBUtils<br>首先加载数据库驱动Class.forName(“com.mysql.jdbc.Driver”);<br>3.获取连接DriverManager.getConnection(url,user,password);<br>url:com.mysql:localhost:3306/mysqls?characterEncoding=utf=8<br>user:你的数据库名<br>password：你的数据库密码<br>4.创建处理对象：获取连接对象.createStatement();<br><img src="https://s2.ax1x.com/2019/05/02/EYXirt.png" alt="连接数据库"><br>5.编写sql语句<br>6.执行sql语句：<br>statement.executeQuery(sql);//查询<br>statementexecuteUpdate(sql);//增，删，改<br>7.关闭流<br>获取连接对象.close<br><img src="https://s2.ax1x.com/2019/05/02/EYXPKI.png" alt="关流"></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在java中，数据库存取技术可分为如下几类：&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>测试版</title>
    <link href="http://sunoat77.github.io/2019/04/28/%E6%B5%8B%E8%AF%95%E7%89%88/"/>
    <id>http://sunoat77.github.io/2019/04/28/测试版/</id>
    <published>2019-04-28T13:51:17.000Z</published>
    <updated>2019-05-02T02:04:51.124Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.<br><a id="more"></a></p><h1 id="来自一个程序员的博客"><a href="#来自一个程序员的博客" class="headerlink" title="来自一个程序员的博客"></a>来自一个程序员的博客</h1><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p><a href="http://baidu.com" target="_blank" rel="noopener">百度一下</a></p><ul><li>列表内容</li><li>列表内容1</li><li>列表内容2</li><li>列表内容3  </li></ul><table><thead><tr><th>姓名</th><th>技能</th><th>排行</th></tr></thead><tbody><tr><td>刘备</td><td>哭</td><td>大哥</td></tr><tr><td>关于</td><td>打</td><td>二哥</td></tr><tr><td>张飞</td><td>骂</td><td>三哥  </td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public void static main(String[] args)&#123;</span><br><span class="line">system.out.println(&quot;这是我的第一个博客&quot;);</span><br><span class="line">&#125;</span><br><span class="line">alert(&apos;hello world&apos;);</span><br></pre></td></tr></table></figure><hr><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><pre><code>&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;table border=&quot;1&quot; ellspacing=&quot;0&quot; cellpadding=&quot;5&quot;&gt;    &lt;caption&gt;成绩单&lt;/caption&gt;    &lt;tr&gt;        &lt;td&gt;姓名&lt;/td&gt;        &lt;td&gt;性别&lt;/td&gt;        &lt;td&gt;成绩&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td&gt;张三&lt;/td&gt;        &lt;td&gt;男&lt;/td&gt;        &lt;td&gt;89&lt;/td&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td&gt;李四&lt;/td&gt;        &lt;td&gt;男&lt;/td&gt;        &lt;td&gt;88&lt;/td&gt;    &lt;/tr&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="https://s2.ax1x.com/2019/04/29/E3rTfI.jpg" alt="hello world"></p><p>##第三章<br><img src="https://s2.ax1x.com/2019/04/29/E3rTfI.jpg" alt="天气"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://sunoat77.github.io/2019/04/28/hello-world/"/>
    <id>http://sunoat77.github.io/2019/04/28/hello-world/</id>
    <published>2019-04-28T06:47:56.563Z</published>
    <updated>2019-04-28T07:07:40.689Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
